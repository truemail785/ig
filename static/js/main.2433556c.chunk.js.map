{"version":3,"sources":["firebase.js","Post.js","InputPost.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","username","imageUrl","caption","user","postID","useState","comment","setComment","comments","setComments","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","a","text","value","onChange","event","target","disabled","onClick","preventDefault","add","displayName","timeStamp","FieldValue","serverTimestamp","InputPost","setCaption","image","setImage","progress","setProgress","max","Input","type","placeholder","e","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","modalStyle","classes","posts","setposts","signupOpen","setSignupOpen","loginOpen","setLoginOpen","setUsername","email","setEmail","password","setPassword","setUser","id","post","onAuthStateChanged","authUser","console","log","Modal","open","onClose","style","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","signOut","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2433556c.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyC_LDJuYw35-xPErFldSDd7d2z1ddDUi6M\",\r\n  authDomain: \"instagram-oz.firebaseapp.com\",\r\n  databaseURL: \"https://instagram-oz.firebaseio.com\",\r\n  projectId: \"instagram-oz\",\r\n  storageBucket: \"instagram-oz.appspot.com\",\r\n  messagingSenderId: \"205565122129\",\r\n  appId: \"1:205565122129:web:66855e90c5a7a3093aca70\",\r\n  measurementId: \"G-5QX4JVX225\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage()\r\n\r\nexport {db, auth, storage}","import React , {useState, useEffect}from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar/\"\r\nimport \"./post.css\"\r\nimport {db} from \"./firebase\"\r\nimport firebase from \"firebase\"\r\nfunction Post({username,imageUrl,caption, user, postID}) {\r\n\tconst [comment, setComment] = useState(\"\")\r\n\tconst [comments, setComments] = useState([])\r\n\tuseEffect(() => {\r\n\t\tlet unsubscribe;\r\n\t\tif(postID){\r\n\t\t\tunsubscribe = db.collection(\"posts\").doc(postID).collection(\"comments\").orderBy('timeStamp',\"asc\").onSnapshot(snapshot=>{\r\n\t\t\tsetComments(snapshot.docs.map(doc=>doc.data()))\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn ()=>{\r\n\t\t\tunsubscribe()\r\n\t\t};\r\n\t}, [postID])\r\n\tconst postComment=(event)=>{\r\n\t\tevent.preventDefault();\r\n\t\tdb.collection(\"posts\").doc(postID).collection(\"comments\").add({\r\n\t\t\ttext: comment,\r\n\t\t\tusername: user.displayName,\r\n\t\t\ttimeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t});\r\n\t\tsetComment(\"\")\r\n\t}\r\n\treturn (\r\n\t\t<div className = \"post\">\r\n\t\t\t<div className = \"post__header\">\r\n\t\t\t\t<Avatar className = \"header__avatar\" alt={username} src=\"/static/images/avatar/1.jpg\" />\r\n\t\t\t\t<h4 className = \"header__name\">{username}</h4>\r\n\t\t\t</div>\r\n\t\t\t<img \r\n\t\t\t\tclassName = \"post__img\"\r\n\t\t\t\tsrc = {imageUrl}\r\n\t\t\t\talt = \"pic\"\r\n\t\t\t/>\r\n\t\t\t<p className = \"post__caption\"><strong>{username} </strong>{caption}</p>\r\n\t\t\t{comments.map(a=>(<p className = \"comment\"><strong>{a.username} </strong>{a.text}</p>))}\r\n\t\t\t{user&&\r\n\t\t\t\t<form className = \"post__comment\">\r\n\t\t\t\t\t<input className = \"comment__text\" value = {comment} onChange = {(event)=>setComment(event.target.value)}/>\r\n\t\t\t\t\t<button disabled = {!comment} className = \"comment__button\" onClick = {postComment}>Post</button>\r\n\t\t\t\t</form>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post","import React , {useState, useEffect}from 'react';\r\nimport {db ,storage} from \"./firebase\"\r\nimport {Button, Input} from \"@material-ui/core\"\r\nimport firebase from \"firebase\"\r\nimport \"./InputPost.css\"\r\nfunction InputPost({username}) {\r\n\tconst [caption , setCaption] = useState(\"\")\r\n\tconst [image, setImage] = useState(null)\r\n\tconst [progress, setProgress] = useState(0)\r\n\r\n\tconst handleChange = (event)=>{\r\n\t\tif(event.target.files[0]){\r\n\t\t\tsetImage(event.target.files[0]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleUpload=()=>{\r\n\t\tconst uploadTask = storage.ref(`images/${image.name}`).put(image)\r\n\r\n\t\tuploadTask.on(\r\n\t\t\t\"state_changed\",\r\n\t\t\t(snapshot)=>{\r\n\t\t\t\tlet progress = Math.round(\r\n\t\t\t\t\t(snapshot.bytesTransferred / snapshot.totalBytes)\r\n\t\t\t\t\t*100);\r\n\t\t\t\tsetProgress(progress)\r\n\t\t\t},\r\n\t\t\t(error)=>{\r\n\t\t\t\talert(error.message)\r\n\t\t\t},\r\n\t\t\t()=>{\r\n\t\t\t\tstorage\r\n\t\t\t\t.ref(\"images\")\r\n\t\t\t\t.child(image.name)\r\n\t\t\t\t.getDownloadURL()\r\n\t\t\t\t.then(url=>{\r\n\t\t\t\t\tdb.collection(\"posts\").add({\r\n\t\t\t\t\t\ttimeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t\t\t\t\tcaption: caption,\r\n\t\t\t\t\t\timageUrl: url,\r\n\t\t\t\t\t\tusername: username\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetImage(null);\r\n\t\t\t\t\tsetCaption(\"\");\r\n\t\t\t\t\tsetProgress(0)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<center>\r\n\t\t\t<div className = \"imageUpload\">\r\n\t\t\t<progress value = {progress} max = '100' ></progress>\r\n\t\t\t<Input type = \"text\" placeholder =\"type here...\" value = {caption} onChange = {(e)=>setCaption(e.target.value)}/>\r\n\t\t\t<Input type = \"file\" onChange = {handleChange}/>\r\n\t\t\t<Button onClick = {handleUpload}>UPLOAD</Button>\r\n\t\t</div>\r\n\t\t</center>\r\n\t)\r\n}\r\n\r\nexport default InputPost","import React , {useState, useEffect}from 'react';\nimport './App.css';\nimport Post from \"./Post\"\nimport {db ,auth} from \"./firebase\"\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, Input} from \"@material-ui/core\"\nimport InputPost from './InputPost'\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction App() {\n  const [modalStyle] = useState(getModalStyle)\n  const classes = useStyles()\n  const [posts ,setposts] = useState([])\n  const [signupOpen , setSignupOpen]  = useState(false)\n  const [loginOpen, setLoginOpen] = useState(false)\n  const [username , setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [user , setUser] = useState(null)\n  useEffect(() => {\n      db.collection(\"posts\").orderBy('timeStamp',\"desc\").onSnapshot(snapshot=>{\n        setposts(snapshot.docs.map(doc=>({\n          id: doc.id,\n          post: doc.data()\n        })))\n      })\n    }, [])  \n  \n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser=>{\n      if(authUser){\n        console.log(authUser)\n        setUser(authUser)\n      }\n      else{\n        setUser(null)\n      }\n    })\n    return ()=>unsubscribe()\n  }, [user ,username])\n\n  const signup = (event)=>{\n    event.preventDefault()\n    auth.createUserWithEmailAndPassword(email, password)\n    .then(authUser=>{\n      return authUser.user.updateProfile({\n        displayName: username\n      })\n    })\n    .catch(error=>alert(error.message))\n    setSignupOpen(false)\n  }   \n  \n  const login = (event)=>{\n    event.preventDefault()\n    auth\n    .signInWithEmailAndPassword(email, password)\n    .catch(error=>alert(error.message))\n\n    setLoginOpen(false)\n\n  }\n  return (\n    <div className = \"app\">\n      <Modal\n        open={signupOpen}\n        onClose={()=>setSignupOpen(false)}\n      >\n      <div className =  {classes.paper} style = {modalStyle}>\n        <form  className = \"app__signup\">\n          <img className = \"app__signupimg\" src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"/>\n            <Input \n              type = \"text\"\n             value = {username} \n             placeholder = \"username\" \n             onChange = {(e)=>setUsername(e.target.value)}\n             />\n             <Input \n              type = \"text\"\n             value = {email} \n             placeholder = \"email\" \n             onChange = {(e)=>setEmail(e.target.value)}\n             />\n             <Input \n              type = \"password\"\n             value = {password} \n             placeholder = \"password\" \n             onChange = {(e)=>setPassword(e.target.value)}\n             />\n             <Button type = \"submit\" onClick = {signup}>SignUP</Button>\n        </form>\n      </div>\n      </Modal>\n            <Modal\n        open={loginOpen}\n        onClose={()=>setLoginOpen(false)}\n      >\n      <div className =  {classes.paper} style = {modalStyle}>\n        <form  className = \"app__signup\">\n          <img className = \"app__signupimg\" src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"/>\n             <Input \n              type = \"text\"\n             value = {email} \n             placeholder = \"email\" \n             onChange = {(e)=>setEmail(e.target.value)}\n             />\n             <Input \n              type = \"password\"\n             value = {password} \n             placeholder = \"password\" \n             onChange = {(e)=>setPassword(e.target.value)}\n             />\n             <Button type = \"submit\" onClick = {login}>Login</Button>\n        </form>\n      </div>\n      </Modal>\n\n      <div className = \"header\">\n        <img className = \"header__img\" src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" />\n        {user? \n          <Button onClick = {()=>auth.signOut()}>Logout</Button>:\n          <div>\n            <Button onClick = {()=>setLoginOpen(true)}>Login</Button>\n            <Button onClick = {()=>setSignupOpen(true)}>SignUp</Button>\n          </div>\n        }\n      </div>\n      <div className = \"app__posts\">\n        {posts.map(({id, post})=>(<Post key = {id} postID = {id} user = {user} username = {post.username} imageUrl = {post.imageUrl} caption = {post.caption}/>))}\n      </div>\n      \n      {user?.displayName?<InputPost username = {user.displayName} />:\n      <center><h3>You Can Login To post</h3></center>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}